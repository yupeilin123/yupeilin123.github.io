<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>青蛙蛤蟆兽</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-01T06:59:46.811Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>yupeilin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Koa系列-Response Transformation：koa-res</title>
    <link href="http://yoursite.com/2019/04/01/koa/koa-res/"/>
    <id>http://yoursite.com/2019/04/01/koa/koa-res/</id>
    <published>2019-04-01T06:54:02.000Z</published>
    <updated>2019-04-01T06:59:46.811Z</updated>
    
    <content type="html"><![CDATA[<p>代码比较简单，干净。主要是控制responseBody的数据。</p><p>首先判断 <code>options.custom</code> 是不是一个函数，若不是则提示类型错误。</p><p>然后如果存在 <code>ctx._returnRaw</code> 为 <code>true</code>，则直接返回 <code>ctx.body</code> 。</p><p>否则，</p><a id="more"></a><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> status = ctx.status</span><br><span class="line"><span class="keyword">const</span> data = ctx.body</span><br><span class="line"><span class="comment">// 忽略 method = option and status = 404</span></span><br><span class="line"><span class="keyword">if</span> (ctx.method.toLowerCase !== <span class="string">'option'</span> &amp;&amp; status !== <span class="number">404</span>) &#123;</span><br><span class="line">  ctx.body = &#123;</span><br><span class="line">    ok: <span class="literal">true</span>,</span><br><span class="line">    data: data,</span><br><span class="line">    version: options.version || version || <span class="string">'1.0.0'</span>,</span><br><span class="line">    now: <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (custom) &#123;</span><br><span class="line">    <span class="built_in">Object</span>.assign(ctx.body, custom(ctx))</span><br><span class="line">  &#125;</span><br><span class="line">  ctx.status = status</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果应用运行错误，则在 <code>ctx.body</code> 中加入 <code>statck: e.stack</code> 。</p><p>配置了 <code>options.debug = true</code> ，则不显示 <code>ctx.body.stack</code> 。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码比较简单，干净。主要是控制responseBody的数据。&lt;/p&gt;
&lt;p&gt;首先判断 &lt;code&gt;options.custom&lt;/code&gt; 是不是一个函数，若不是则提示类型错误。&lt;/p&gt;
&lt;p&gt;然后如果存在 &lt;code&gt;ctx._returnRaw&lt;/code&gt; 为 &lt;code&gt;true&lt;/code&gt;，则直接返回 &lt;code&gt;ctx.body&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;否则，&lt;/p&gt;
    
    </summary>
    
      <category term="Koa" scheme="http://yoursite.com/categories/Koa/"/>
    
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>Koa系列-i18n：koa-i18n</title>
    <link href="http://yoursite.com/2019/03/28/koa/koa-i18n/"/>
    <id>http://yoursite.com/2019/03/28/koa/koa-i18n/</id>
    <published>2019-03-28T06:12:30.000Z</published>
    <updated>2019-03-28T06:37:41.306Z</updated>
    
    <content type="html"><![CDATA[<p>首先是使用了 <code>i18n-2</code> ，这个模块意指被设计给 <code>Express</code> 开箱即用。但这个模块是fork了 <code>i18n</code> 。所以想要看具体的配置用法，得去搜索 <code>i18n</code> 。除此之外，这个中间件必须得搭配 <code>koa-locale</code> 一起使用。</p><p>首先定义 <code>LOCALE_METHODS</code> ,其值的意思是有几种使用 <code>i18n</code> 的方式，分别是 <code>Subdomain</code> , <code>Cookie</code> , <code>Header</code> , <code>Query</code> , <code>Url</code> , <code>TL</code> 。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> LOCALE_METHODS = [</span><br><span class="line">  <span class="string">'Subdomain'</span>,</span><br><span class="line">  <span class="string">'Cookie'</span>,</span><br><span class="line">  <span class="string">'Header'</span>,</span><br><span class="line">  <span class="string">'Query'</span>,</span><br><span class="line">  <span class="string">'Url'</span>,</span><br><span class="line">  <span class="string">'TLD'</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> SET_PREFIX = <span class="string">'setLocaleFrom'</span></span><br><span class="line"><span class="keyword">const</span> GET_PREFIX = <span class="string">'getLocaleFrom'</span></span><br></pre></td></tr></table></figure><p>然后再定义类 <code>I18n</code> 继承 <code>I18n2</code> ，通过配置选项得到 <code>modes</code> 和 <code>whitelist</code> 。</p><a id="more"></a><p>然后将 <code>LOCALE_METHODS</code> 通过循环将 <code>SET_PREFIX + val</code> 分别挂载到 <code>I18n.prototype</code> 。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">LOCALE_METHODS.forEach(<span class="function">(<span class="params">m</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">Object</span>.defineProperty(I18n.prototype, SET_PREFIX + m, &#123;</span><br><span class="line">    value: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">let</span> locale = getLocale(<span class="keyword">this</span>.request[GET_PREFIX + m]())</span><br><span class="line">      <span class="keyword">if</span> (locale === <span class="keyword">this</span>.getLocale()) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      <span class="keyword">if</span> ((locale = filter(locale, <span class="keyword">this</span>.locales))) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setLocale(locale)</span><br><span class="line">        debug(<span class="string">'Overriding locale from %s : %s'</span>, m.toLowerCase(), locale)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>定义函数 <code>ial</code></p><p>在 <code>app.context</code> 上定义 <code>i18n</code> 属性，其 <code>get</code> 函数为类 <code>I18n</code> 的实例。<br>也给 <code>app.crequest</code> 上定义了 <code>i18n</code> 属性。</p><p>最后通过 <code>whitelist</code> 筛选出不需要的 <code>i18n</code> 。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">i18nMiddleware</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">  ctx.i18n.whitelist.some(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> customLocaleMethod = <span class="keyword">typeof</span> key === <span class="string">'function'</span></span><br><span class="line">      &amp;&amp; ctx.i18n.setLocale(key.apply(ctx))</span><br><span class="line">    <span class="keyword">if</span> (customLocaleMethod || ctx.i18n[SET_PREFIX + key]()) <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> next()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册方法</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">registerMethods</span>(<span class="params">helpers, i18n</span>) </span>&#123;</span><br><span class="line">  I18n.resMethods.forEach(<span class="function"><span class="params">method</span> =&gt;</span> &#123;</span><br><span class="line">    helpers[method] = i18n[method].bind(i18n)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 得到当前locale值的小写</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getLocale</span>(<span class="params">locale</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> (locale || <span class="string">''</span>).toLowerCase()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 筛选locale</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params">locale, locales</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> k <span class="keyword">in</span> locales) &#123;</span><br><span class="line">    <span class="keyword">if</span> (locale === k.toLowerCase()) &#123;</span><br><span class="line">      <span class="keyword">return</span> k</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;首先是使用了 &lt;code&gt;i18n-2&lt;/code&gt; ，这个模块意指被设计给 &lt;code&gt;Express&lt;/code&gt; 开箱即用。但这个模块是fork了 &lt;code&gt;i18n&lt;/code&gt; 。所以想要看具体的配置用法，得去搜索 &lt;code&gt;i18n&lt;/code&gt; 。除此之外，这个中间件必须得搭配 &lt;code&gt;koa-locale&lt;/code&gt; 一起使用。&lt;/p&gt;
&lt;p&gt;首先定义 &lt;code&gt;LOCALE_METHODS&lt;/code&gt; ,其值的意思是有几种使用 &lt;code&gt;i18n&lt;/code&gt; 的方式，分别是 &lt;code&gt;Subdomain&lt;/code&gt; , &lt;code&gt;Cookie&lt;/code&gt; , &lt;code&gt;Header&lt;/code&gt; , &lt;code&gt;Query&lt;/code&gt; , &lt;code&gt;Url&lt;/code&gt; , &lt;code&gt;TL&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; LOCALE_METHODS = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;Subdomain&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;Cookie&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;Header&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;Query&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;Url&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&#39;TLD&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; SET_PREFIX = &lt;span class=&quot;string&quot;&gt;&#39;setLocaleFrom&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; GET_PREFIX = &lt;span class=&quot;string&quot;&gt;&#39;getLocaleFrom&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后再定义类 &lt;code&gt;I18n&lt;/code&gt; 继承 &lt;code&gt;I18n2&lt;/code&gt; ，通过配置选项得到 &lt;code&gt;modes&lt;/code&gt; 和 &lt;code&gt;whitelist&lt;/code&gt; 。&lt;/p&gt;
    
    </summary>
    
      <category term="Koa" scheme="http://yoursite.com/categories/Koa/"/>
    
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>Koa系列-Analytics：koa-analytics</title>
    <link href="http://yoursite.com/2019/03/27/koa/koa-analytics/"/>
    <id>http://yoursite.com/2019/03/27/koa/koa-analytics/</id>
    <published>2019-03-27T06:15:29.000Z</published>
    <updated>2019-03-27T06:20:06.938Z</updated>
    
    <content type="html"><![CDATA[<p>主要是来收集应用的数据，分析应用的数据。使用了模块 <code>snippet</code> 。</p><p>并通过 <code>combined-stream</code> 将 <code>ctx.body</code> 和 分析应用带js的 <code>html</code> 文件合并在一起，作为响应。</p><p>如果没有 <code>ctx.body</code> 和 <code>content-type !== &#39;html</code> 则直接返回</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;主要是来收集应用的数据，分析应用的数据。使用了模块 &lt;code&gt;snippet&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;并通过 &lt;code&gt;combined-stream&lt;/code&gt; 将 &lt;code&gt;ctx.body&lt;/code&gt; 和 分析应用带js的
        
      
    
    </summary>
    
      <category term="Koa" scheme="http://yoursite.com/categories/Koa/"/>
    
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>Koa系列-Metrics：koa-response-time</title>
    <link href="http://yoursite.com/2019/03/27/koa/koa-response-time/"/>
    <id>http://yoursite.com/2019/03/27/koa/koa-response-time/</id>
    <published>2019-03-27T05:30:29.000Z</published>
    <updated>2019-03-27T05:38:16.517Z</updated>
    
    <content type="html"><![CDATA[<p>总体来说比较简单，主要用到了 <code>process.hrtime</code> 这个方法。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">responseTime</span>(<span class="params">options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> hrtime = options &amp;&amp; options.hrtime;</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> <span class="title">responseTime</span>(<span class="params">ctx, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> start = process.hrtime();</span><br><span class="line">    <span class="keyword">return</span> next().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">let</span> delta = process.hrtime(start);</span><br><span class="line">      <span class="comment">// delata是纳秒级别的，所以要转微妙</span></span><br><span class="line">      delta = delta[<span class="number">0</span>] * <span class="number">1000</span> + delta[<span class="number">1</span>] / <span class="number">1000000</span>;</span><br><span class="line">      <span class="keyword">if</span> (!hrtime) &#123;</span><br><span class="line">        <span class="comment">// 转为毫秒</span></span><br><span class="line">        delta = <span class="built_in">Math</span>.round(delta);</span><br><span class="line">      &#125;</span><br><span class="line">      ctx.set(<span class="string">'X-Response-Time'</span>, delta + <span class="string">'ms'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考 <a href="https://nodejs.org/dist/latest-v10.x/docs/api/process.html#process_process_hrtime_time" target="_blank" rel="noopener">process.hrtime</a></p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;总体来说比较简单，主要用到了 &lt;code&gt;process.hrtime&lt;/code&gt; 这个方法。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span
        
      
    
    </summary>
    
      <category term="Koa" scheme="http://yoursite.com/categories/Koa/"/>
    
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
  </entry>
  
  <entry>
    <title>Koa系列-Livereload：koa-livereload</title>
    <link href="http://yoursite.com/2019/03/13/koa/koa-livereload/"/>
    <id>http://yoursite.com/2019/03/13/koa/koa-livereload/</id>
    <published>2019-03-13T03:27:27.000Z</published>
    <updated>2019-03-27T03:17:19.658Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">livereload</span>(<span class="params">opts</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 选项</span></span><br><span class="line">  opts = opts || &#123;&#125;;</span><br><span class="line">  <span class="comment">// 端口</span></span><br><span class="line">  <span class="keyword">var</span> port = opts.port || <span class="number">35729</span>;</span><br><span class="line">  <span class="comment">// livereload.js文件的路径</span></span><br><span class="line">  <span class="keyword">var</span> src = opts.src || <span class="string">"' + (location.protocol || 'http:') + '//' + (location.hostname || 'localhost') + ':"</span> + port + <span class="string">"/livereload.js?snipver=1"</span>;</span><br><span class="line">  <span class="keyword">var</span> snippet = <span class="string">"\n&lt;script type=\"text/javascript\"&gt;document.write('&lt;script src=\""</span> + src + <span class="string">"\" type=\"text/javascript\"&gt;&lt;\\/script&gt;')&lt;/script&gt;\n"</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="function">(<span class="params">ctx, next</span>) =&gt;</span> next().then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// content-type 不是 text/html 则返回</span></span><br><span class="line">    <span class="keyword">if</span> (ctx.response.type &amp;&amp; !ctx.response.type.includes(<span class="string">'html'</span>)) <span class="keyword">return</span>;</span><br><span class="line">    <span class="comment">// 实际请求路径在排除路径中，则返回</span></span><br><span class="line">    <span class="keyword">if</span> (opts.excludes) &#123;</span><br><span class="line">      <span class="keyword">var</span> path = ctx.path;</span><br><span class="line">      <span class="keyword">if</span> (opts.excludes.some(<span class="function"><span class="params">exclude</span> =&gt;</span> path.startsWith(exclude))) <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Buffer处理，转化为字符串</span></span><br><span class="line">    <span class="keyword">if</span> (Buffer.isBuffer(ctx.body)) &#123;</span><br><span class="line">      ctx.body = ctx.body.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// string处理，在&lt;/body&gt;之前增加snippet</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">typeof</span> ctx.body === <span class="string">'string'</span>) &#123;</span><br><span class="line">      <span class="comment">// 已经存在livereload.js 则返回</span></span><br><span class="line">      <span class="keyword">if</span> (ctx.body.match(<span class="regexp">/livereload.js/</span>)) <span class="keyword">return</span>;</span><br><span class="line">      ctx.body = ctx.body.replace(<span class="regexp">/&lt;\/body&gt;/</span>, snippet + <span class="string">"&lt;\/body&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// stream处理，通过模板StreamInjecter处理</span></span><br><span class="line">    <span class="keyword">if</span> (ctx.body &amp;&amp; <span class="keyword">typeof</span> ctx.body.pipe === <span class="string">'function'</span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> injecter = <span class="keyword">new</span> StreamInjecter(&#123;</span><br><span class="line">        matchRegExp : <span class="regexp">/(&lt;\/body&gt;)/</span>,</span><br><span class="line">        inject : snippet,</span><br><span class="line">        replace : snippet + <span class="string">"$1"</span>,</span><br><span class="line">        ignore : <span class="regexp">/livereload.js/</span></span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="keyword">var</span> size = +ctx.response.header[<span class="string">'content-length'</span>];</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (size) ctx.set(<span class="string">'Content-Length'</span>, size + Buffer.byteLength(snippet));</span><br><span class="line">      ctx.body = ctx.body.pipe(injecter);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>应用程序的热更新，现在已经有了很好的选择，如 <code>koa-webpack</code> , <code>nodemon</code>, <code>pm2</code> 等。</p>]]></content>
    
    <summary type="html">
    
      
      
        
        
          &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
      <category term="Koa" scheme="http://yoursite.com/categories/Koa/"/>
    
    
      <category term="koa" scheme="http://yoursite.com/tags/koa/"/>
    
  </entry>
  
</feed>
